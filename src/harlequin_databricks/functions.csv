Name,Function,Description
abs,abs(expr),Returns the absolute value of the numeric value in expr.
acos,acos(expr),Returns the inverse cosine (arccosine) of expr.
acosh,acosh(expr),Returns the inverse hyperbolic cosine of expr.
add_months,"add_months(startDate,numMonths)",Returns the date that is numMonths after startDate.
aes_decrypt,"aes_decrypt(expr, key[, mode[, padding[, aad]]])",Decrypts a binary expr using AES encryption.
aes_encrypt,"aes_encrypt(expr, key[, mode[, padding[, iv[, aad]]]])",Encrypts a binary expr using AES encryption.
aggregate,"aggregate(expr,start,merge[,finish])",Aggregates elements in an array using a custom aggregator.
ai_analyze_sentiment,ai_analyze_sentiment(content),Returns the sentiment of a text.
ai_classify,"ai_classify(content, labels)",Classifies the provided content into one of the provided labels.
ai_extract,"ai_extract(content, labels)",Extracts entities specified by labels from a given text.
ai_fix_grammar,ai_fix_grammar(content),Corrects grammatical errors in a given text.
ai_gen,ai_gen(content),Invokes a state-of-the-art generative AI model from Databricks Foundation Model APIs to answer the user-provided prompt.
ai_generate_text,"ai_generate_text(prompt, modelName[, param1, value1] […])",Deprecated: Returns text generated by a selected large language model (LLM) given the prompt.
ai_mask,"ai_mask(content, labels)",Masks specified entities within a given text.
ai_query,"ai_query(endpointName, request, returnType)",Invokes an existing Databricks Model Serving endpoint and parses and returns its response.
ai_similarity,"ai_similarity(strExpr1, strExpr2)",Compares two strings and computes the semantic similarity score.
ai_summarize,"ai_summarize(content[, max_words])",Generates a summary of a given text.
ai_translate,"ai_translate(content, to_lang)",Translates text to a specified target language.
any,any(expr),Returns true if at least one value of expr in the group is true.
any_value,"any_value(expr[,ignoreNull])",Returns some value of expr for a group of rows.
approx_count_distinct,"approx_count_distinct(expr[,relativeSD])",Returns the estimated number of distinct values in expr within the group.
approx_percentile,"approx_percentile(expr,percentage[,accuracy])",Returns the approximate percentile of the expr within the group.
approx_top_k,"approx_top_k(expr[,k[,maxItemsTracked]])",Returns the top k most frequently occurring item values in an expr along with their approximate counts.
array,"array([expr [, …]])",Returns an array with the elements in expr.
array_agg,array_agg(expr),Returns an array consisting of all values in expr within the group.
array_append,"array_append(array, elem)",Returns array appended by elem.
array_compact,array_compact(array),Removes NULL values from array.
array_contains,"array_contains(array,value)",Returns true if array contains value.
array_distinct,array_distinct(array),Removes duplicate values from array.
array_except,"array_except(array1,array2)",Returns an array of the elements in array1 but not in array2.
array_insert,"array_insert(array, index, elem)",Returns an expanded array where elem is inserted at the index position.
array_intersect,"array_intersect(array1,array2)",Returns an array of the elements in the intersection of array1 and array2.
array_join,"array_join(array,delimiter[,nullReplacement])",Concatenates the elements of array.
array_max,array_max(array),Returns the maximum value in array.
array_min,array_min(array),Returns the minimum value in array.
array_position,"array_position(array,element)",Returns the position of the first occurrence of element in array.
array_prepend,"array_prepend(array, elem)",Returns array prepended by elem.
array_remove,"array_remove(array,element)",Removes all occurrences of element from array.
array_repeat,"array_repeat(element,count)",Returns an array containing element count times.
array_size,array_size(array),Returns the number of elements in array.
array_sort,"array_sort(array,func)",Returns array sorted according to func.
array_union,"array_union(array1,array2)",Returns an array of the elements in the union of array1 and array2 without duplicates.
arrays_overlap,"arrays_overlap(array1, array2)",Returns true if the intersection of array1 and array2 is not empty.
arrays_zip,"arrays_zip(array1 [, …])",Returns a merged array of structs in which the nth struct contains all Nth values of input arrays.
ascii,ascii(str),Returns the ASCII code point of the first character of str.
asin,asin(expr),Returns the inverse sine (arcsine) of expr.
asinh,asinh(expr),Returns the inverse hyperbolic sine of expr.
assert_true,assert_true(expr),Returns an error if expr is not true.
atan,atan(expr),Returns the inverse tangent (arctangent) of expr.
atan2,"atan2(exprY, exprX)","Returns the angle in radians between the positive x-axis of a plane and the point specified by the coordinates (exprX, exprY)."
atanh,atanh(expr),Returns inverse hyperbolic tangent of expr.
avg,avg(expr),Returns the mean calculated from values of a group.
base64,base64(expr),Converts expr to a base 64 string.
bigint,bigint(expr),Casts the value expr to BIGINT.
bin,bin(expr),Returns the binary representation of expr.
binary,binary(expr),Casts the value of expr to BINARY.
bit_and,bit_and(expr),Returns the bitwise AND of all input values in the group.
bit_count,bit_count(expr),Returns the number of bits set in the argument.
bit_get,"bit_get(expr, pos)",Returns the value of a bit in a binary representation of an integral numeric.
bit_length,bit_length(expr),Returns the bit length of string data or number of bits of binary data.
bit_or,bit_or(expr),Returns the bitwise OR of all input values in the group.
bit_reverse,bit_reverse(expr),Returns the value obtained by reversing the order of the bits in the argument.
bit_xor,bit_xor(expr),Returns the bitwise XOR of all input values in the group.
bitmap_bit_position,bitmap_bit_position(expr),Returns the 0-based bit position of a given BIGINT number within a bucket.
bitmap_bucket_number,bitmap_bucket_number(expr),Returns the bitmap bucket number for a given BIGINT number.
bitmap_construct_agg,bitmap_construct_agg(expr),Returns the bitwise OR of all bit position values in the group. between 0 and 32767 in a group as a BINARY.
bitmap_count,bitmap_count(expr),Returns the number of bits set in a BINARY string representing a bitmap.
bitmap_or_agg,bitmap_or_agg(expr),Returns the bitwise OR of all BINARY input values in the group.
bool_and,bool_and(expr),Returns true if all values in expr are true within the group.
bool_or,bool_or(expr),Returns true if at least one value in expr is true within the group.
boolean,boolean(expr),Casts expr to BOOLEAN.
bround,"bround(expr[,targetScale])",Returns the rounded expr using HALF_EVEN rounding mode.
btrim,"btrim(str [, trimStr])",Returns str with leading and trailing characters removed.
cardinality,cardinality(expr),Returns the size of expr.
cast,cast(expr AS type),Casts the value expr to the target data type type.
cbrt,cbrt(expr),Returns the cube root of expr.
ceil,"ceil(expr[,targetScale])",Returns the smallest number not smaller than expr rounded up to targetScale digits relative to the decimal point.
ceiling,"ceiling(expr[,targetScale])",Returns the smallest number not smaller than expr rounded up to targetScale digits relative to the decimal point.
char,char(expr),Returns the character at the supplied UTF-16 code point.
char_length,char_length(expr),Returns the character length of string data or number of bytes of binary data.
character_length,character_length(expr),Returns the character length of string data or number of bytes of binary data.
charindex,"charindex(substr, str[, pos])",Returns the position of the first occurrence of substr in str after position pos.
chr,chr(expr),Returns the character at the supplied UTF-16 code point.
cloud_files_state,cloud_files_state( { TABLE(table) | checkpoint } ),Returns the file-level state of an autoloader cloud_files source.
coalesce,"coalesce(expr1, expr2 [, …])",Returns the first non-null argument.
collect_list,collect_list(expr),Returns an array consisting of all values in expr within the group.
collect_set,collect_set(expr),Returns an array consisting of all unique values in expr within the group.
concat,"concat(expr1, expr2[, …])",Returns the concatenation of the arguments.
concat_ws,"concat_ws(sep[, expr1[, …]])",Returns the concatenation strings separated by sep.
contains,"contains(expr, subExpr)",Returns true if expr STRING or BINARY contains subExpr.
conv,"conv(num, fromBase, toBase)",Converts num from fromBase to toBase.
convert_timezone,"convert_timezone([sourceTz, ]targetTz, sourceTs)",Converts the TIMESTAMP_NTZ sourceTs from the sourceTz time zone to targetTz.
corr,"corr(expr1,expr2)",Returns Pearson coefficient of correlation between a group of number pairs.
cos,cos(expr),Returns the cosine of expr.
cosh,cosh(expr),Returns the hyperbolic cosine of expr.
cot,cot(expr),Returns the cotangent of expr.
count,count(*),"Returns the total number of retrieved rows in a group, including rows containing null."
count_if,count_if(expr),Returns the number of true values for the group in expr.
count_min_sketch,"count_min_sketch(column,epsilon,confidence,seed)","Returns a count-min sketch of all values in the group in column with the epsilon, confidence and seed."
covar_pop,"covar_pop(expr1,expr2)",Returns the population covariance of number pairs in a group.
covar_samp,"covar_samp(expr1,expr2)",Returns the sample covariance of number pairs in a group.
crc32,crc32(expr),Returns a cyclic redundancy check value of expr.
csc,csc(expr),Returns the cosecant of expr.
cube ,"cube (expr1 [, …])",Creates a multi-dimensional cube using the specified expression columns.
cume_dist,cume_dist(),Returns the position of a value relative to all values in the partition.
curdate,curdate(),Returns the current date at the start of query evaluation.
current_catalog,current_catalog(),Returns the current catalog.
current_database,current_database(),Returns the current schema.
current_date,current_date(),Returns the current date at the start of query evaluation.
current_metastore,current_metastore(),Returns the current Unity Catalog Metastore id.
current_recipient,current_recipient(key),Returns a property for the current recipient in a view shared with Delta Sharing.
current_schema,current_schema(),Returns the current schema.
current_timestamp,current_timestamp(),Returns the current timestamp at the start of query evaluation.
current_timezone,current_timezone(),Returns the current session local timezone.
current_user,current_user(),Returns the user executing the statement.
current_version,current_version(),Returns the current version of Databricks.
date,date(expr),Casts the value expr to DATE.
date_add,"date_add(startDate,numDays)",Returns the date numDays after startDate.
date_diff,"date_diff(unit, start, stop)",Returns the difference between two timestamps measured in units.
date_format,"date_format(expr,fmt)",Converts a timestamp to a string in the format fmt.
date_from_unix_date,date_from_unix_date(days),Creates a date from the number of days since 1970-01-01.
date_part,"date_part(field,expr)","Extracts a part of the date, timestamp, or interval."
date_sub,"date_sub(startDate,numDays)",Returns the date numDays before startDate.
date_trunc,"date_trunc(unit,expr)",Returns timestamp truncated to the unit specified in unit.
dateadd,"dateadd(startDate,numDays)",Returns the date numDays after startDate.
datediff,"datediff(endDate,startDate)",Returns the number of days from startDate to endDate.
day,day(expr),Returns the day of month of the date or timestamp.
dayofmonth,dayofmonth(expr),Returns the day of month of the date or timestamp.
dayofweek,dayofweek(expr),Returns the day of week of the date or timestamp.
dayofyear,dayofyear(expr),Returns the day of year of the date or timestamp.
decimal,decimal(expr),Casts the value expr to DECIMAL.
decode,"decode(expr, charSet)",Translates binary expr to a string using the character set encoding charSet.
degrees,degrees(expr),Converts radians to degrees.
dense_rank,dense_rank(),Returns the rank of a value compared to all values in the partition.
double,double(expr),Casts the value expr to DOUBLE.
e,e(),Returns the constant e.
element_at,"element_at(arrayExpr, index)",Returns the element of an arrayExpr at index.
elt,"elt(index, expr1 [, …] )",Returns the nth expression.
encode,"encode(expr, charSet)",Returns the binary representation of a string using the charSet character encoding.
endswith,"endswith(expr, endExpr)",Returns true if expr STRING or BINARY ends with endExpr.
equal_null,"equal_null(expr1, expr2)","Returns true if expr1 equals expr2 or both expressions are NULL, or false otherwise."
event_log,event_log( { TABLE(table) | pipeline_id } ),"Returns a table of the refresh history for a materialized view, streaming table, or DLT pipeline."
every,every(expr),Returns true if all values of expr in the group are true.
exists,"exists(expr, pred)",Returns true if pred is true for any element in expr.
exp,exp(expr),Returns e to the power of expr.
explode,explode(collection),Returns rows by un-nesting collection.
explode_outer,explode_outer(collection),Returns rows by un-nesting collection using outer semantics.
expm1,expm1(expr),Returns exp(expr) - 1.
extract,extract(field FROM source),Returns field of source.
factorial,factorial(expr),Returns the factorial of expr.
filter,"filter(expr,func)",Filters the array in expr using the function func.
find_in_set,"find_in_set(searchExpr, sourceExpr)",Returns the position of a string within a comma-separated list of strings.
first,"first(expr[,ignoreNull])",Returns the first value of expr for a group of rows.
first_value,"first_value(expr[,ignoreNull])",Returns the first value of expr for a group of rows.
flatten,flatten(arrayOfArrays),Transforms an array of arrays into a single array.
float,float(expr),Casts the value expr to FLOAT.
floor,"floor(expr[,targetScale])",Returns the largest number not smaller than expr rounded down to targetScale digits relative to the decimal point.
forall,"forall(expr, predFunc)",Tests whether predFunc holds for all elements in the array.
format_number,"format_number(expr, scale)","Formats expr like #,###,###.##, rounded to scale decimal places."
format_string,"format_string(strfmt[, obj1 [, …]])",Returns a formatted string from printf-style format strings.
from_csv,"from_csv(csvStr, schema[, options])",Returns a struct value with the csvStr and schema.
from_json,"from_json(jsonStr, schema[, options])",Returns a struct value with the jsonStr and schema.
from_unixtime,"from_unixtime(unixTime,fmt)",Returns unixTime in fmt.
from_utc_timestamp,"from_utc_timestamp(expr,timezone)",Returns a timestamp in expr specified in UTC in the timezone timeZone.
from_xml,"from_xml(xmlStr, schema[, options])",Returns a struct value parsed from the xmlStr using schema.
get,"get(arrayExpr, index)","Returns the element of an arrayExpr at index, starting at 0."
get_json_object,"get_json_object(expr, path)",Extracts a JSON object from path.
getbit,"getbit(expr, pos)",Returns the value of a bit in a binary representation of an integral numeric.
getdate,getdate(),Returns the current timestamp at the start of query evaluation.
greatest,"greatest(expr1, expr2 [, …])","Returns the largest value of all arguments, skipping null values."
grouping,grouping(col),"Indicates whether a specified column in a GROUPING SET, ROLLUP, or CUBE represents a subtotal."
grouping_id,"grouping_id([col1 [, …]])",Returns the level of grouping for a set of columns.
hash,"hash(expr1 [, …])",Returns a hashed value of the arguments.
hex,hex(expr),Converts expr to hexadecimal.
hll_sketch_agg,"hll_sketch_agg(expr[,lgConfigK])",Returns a HyperLogLog sketch used to approximate a distinct values count.
hll_sketch_estimate,hll_sketch_estimate(expr),Etimates number of distinct values collected in a HyperLogLog sketch.
hll_union,"hll_union(expr1, expr2 [,allowDifferentLgConfigK])",Combines two HyperLogLog sketches.
hll_union_agg,"hll_union_agg(expr[,allowDifferentLgConfigK])",Aggregates HyperLogLog sketches for a group of rows.
hour,hour(expr),Returns the hour component of a timestamp.
hypot,"hypot(expr1, expr2)",Returns sqrt(expr1 * expr1 + expr2 * expr2).
if,"if(cond, expr1, expr2)","Returns expr1 if cond is true, or expr2 otherwise."
iff,"iff(cond, expr1, expr2)","Returns expr1 if cond is true, or expr2 otherwise."
ifnull,"ifnull(expr1, expr2)","Returns expr2 if expr1 is NULL, or expr1 otherwise."
initcap,initcap(expr),Returns expr with the first letter of each word in uppercase.
inline,inline(expr),Explodes an array of structs into a table.
inline_outer,inline_outer(expr),Explodes an array of structs into a table with outer semantics.
input_file_block_length,input_file_block_length(),Returns the length in bytes of the block being read.
input_file_block_start,input_file_block_start(),Returns the start offset in bytes of the block being read.
input_file_name,input_file_name(),"Returns the name of the file being read, or empty string if not available."
instr,"instr(str, substr)",Returns the (1-based) index of the first occurrence of substr in str.
int,int(expr),Casts the value expr to INTEGER.
is_account_group_member,is_account_group_member(group),Returns true if the current user is a member of group at the account level.
is_member,is_member(group),Returns true if the current user is a member of group at the workspace level.
isnan,isnan(expr),Returns true if expr is NaN.
isnotnull,isnotnull(expr),Returns true if expr is not NULL.
isnull,isnull(expr),Returns true if expr is NULL.
java_method,"java_method(class, method[, arg1 [, …]])",Calls a method with reflection.
json_array_length,json_array_length(jsonArray),Returns the number of elements in the outermost JSON array.
json_object_keys,json_object_keys(jsonObject),Returns all the keys of the outermost JSON object as an array.
json_tuple,"json_tuple(jsonStr, path1 [, …])",Returns multiple JSON objects as a tuple.
kurtosis,kurtosis(expr),Returns the kurtosis value calculated from values of a group.
lag,"lag(expr[,offset[,default]])",Returns the value of expr from a preceding row within the partition.
last,"last(expr[,ignoreNull])",Returns the last value of expr for the group of rows.
last_day,last_day(expr),Returns the last day of the month that the date belongs to.
last_value,"last_value(expr[,ignoreNull])",Returns the last value of expr for the group of rows.
lcase,lcase(expr),Returns expr with all characters changed to lowercase.
lead,"lead(expr[,offset[,default]])",Returns the value of expr from a subsequent row within the partition.
least,"least(expr1, expr2 [, …])","Returns the smallest value of all arguments, skipping null values."
left,"left(str, len)",Returns the leftmost len characters from str.
len,len(expr),Returns the character length of string data or number of bytes of binary data.
length,length(expr),Returns the character length of string data or number of bytes of binary data.
levenshtein,"levenshtein(str1, str2)",Returns the Levenshtein distance between the strings str1 and str2.
list_secrets,list_secrets(),Returns the keys which the user is authorized to see from Databricks secret service.
ln,ln(expr),Returns the natural logarithm (base e) of expr.
locate,"locate(substr, str[, pos])",Returns the position of the first occurrence of substr in str after position pos.
log,"log([base,] expr)",Returns the logarithm of expr with base.
log10,log10(expr),Returns the logarithm of expr with base 10.
log1p,log1p(expr),Returns log(1 + expr).
log2,log2(expr),Returns the logarithm of expr with base 2.
lower,lower(expr),Returns expr with all characters changed to lowercase.
lpad,"lpad(expr, len[, pad])","Returns expr, left-padded with pad to a length of len."
ltrim,"ltrim([trimstr,] str)",Returns str with leading characters within trimStr removed.
luhn_check,luhn_check(numStr),Returns true if numStr passes the Luhn algorithm check.
make_date,"make_date(year,month,day)","Creates a date from year, month, and day fields."
make_dt_interval,"make_dt_interval([days[, hours[, mins[, secs]]]])","Creates an day-time interval from days, hours, mins and secs."
make_interval,"make_interval(years, months, weeks, days, hours, mins, secs)","Deprecated: Creates an interval from years, months, weeks, days, hours, mins and secs."
make_timestamp,"make_timestamp(year,month,day,hour,min,sec[,timezone])","Creates a timestamp from year, month, day, hour, min, sec, and timezone fields."
make_ym_interval,"make_ym_interval([years[, months]])","Creates a year-month interval from years, and months."
map,"map([{key1, value1}[, …]])",Creates a map with the specified key-value pairs.
map_concat,"map_concat([expr1 [, …]])",Returns the union of all expr map expressions.
map_contains_key,"map_contains_key(map, key)","Returns true if map contains key, false otherwise."
map_entries,map_entries(map),Returns an unordered array of all entries in map.
map_filter,"map_filter(expr, func)",Filters entries in the map in expr using the function func.
map_from_arrays,"map_from_arrays(keys, values)",Creates a map with a pair of the keys and values arrays.
map_from_entries,map_from_entries(expr),Creates a map created from the specified array of entries.
map_keys,map_keys(map),Returns an unordered array containing the keys of map.
map_values,map_values(map),Returns an unordered array containing the values of map.
map_zip_with,"map_zip_with(map1, map2, func)",Merges map1 and map2 into a single map.
mask,"mask(str[, upperChar[, lowerChar[, digitChar[, otherChar]]]])",Returns a masked version of the input str.
max,max(expr),Returns the maximum value of expr in a group.
max_by,"max_by(expr1,expr2)",Returns the value of an expr1 associated with the maximum value of expr2 in a group.
md5,md5(expr),Returns an MD5 128-bit checksum of expr as a hex string.
mean,mean(expr),Returns the mean calculated from values of a group.
median,median(expr),Returns the median calculated from values of a group.
min,min(expr),Returns the minimum value of expr in a group.
min_by,"min_by(expr1, expr2)",Returns the value of an expr1 associated with the minimum value of expr2 in a group.
minute,minute(expr),Returns the minute component of the timestamp in expr.
mod,"mod(dividend, divisor)",Returns the remainder after dividend / divisor.
mode,"mode(expr [,deterministic])","Returns the most frequent, not NULL, value of expr in a group."
monotonically_increasing_id,monotonically_increasing_id(),Returns monotonically increasing 64-bit integers.
month,month(expr),Returns the month component of the timestamp in expr.
months_between,"months_between(expr1,expr2[,roundOff])",Returns the number of months elapsed between dates or timestamps in expr1 and expr2.
named_struct,"named_struct({name1, val1} [, …])",Creates a struct with the specified field names and values.
nanvl,"nanvl(expr1, expr2)","Returns expr1 if it’s not NaN, or expr2 otherwise."
negative,negative(expr),Returns the negated value of expr.
next_day,"next_day(expr,dayOfWeek)",Returns the first date which is later than expr and named as in dayOfWeek.
now,now(),Returns the current timestamp at the start of query evaluation.
nth_value,"nth_value(expr, offset[, ignoreNulls])",Returns the value of expr at a specific offset in the window.
ntile,ntile(n),Divides the rows for each window partition into n buckets ranging from 1 to at most n.
nullif,"nullif(expr1, expr2)","Returns NULL if expr1 equals expr2, or expr1 otherwise."
nvl,"nvl(expr1, expr2)","Returns expr2 if expr1 is NULL, or expr1 otherwise."
nvl2,"nvl2(expr1, expr2, expr3)","Returns expr2 if expr1 is not NULL, or expr3 otherwise."
octet_length,octet_length(expr),Returns the byte length of string data or number of bytes of binary data.
overlay,overlay(input PLACING replace FROM pos [FOR len]),Replaces input with replace that starts at pos and is of length len.
parse_url,"parse_url(url, partToExtract[, key])",Extracts a part from url.
percent_rank,percent_rank(),Computes the percentage ranking of a value within the partition.
percentile,"percentile(expr, percentage [,frequency])",Returns the exact percentile value of expr at the specified percentage.
percentile_approx,"percentile_approx(expr,percentage[,accuracy])",Returns the approximate percentile of the expr within the group.
percentile_cont,percentile_cont(pct) WITHIN GROUP (ORDER BY key),Returns the interpolated percentile of the key within the group.
percentile_disc,percentile_disc(pct) WITHIN GROUP (ORDER BY key),Returns the discrete percentile of the key within the group.
pi,pi(),Returns pi.
pmod,"pmod(dividend, divisor)",Returns the positive remainder after dividend / divisor.
posexplode,posexplode(expr),Returns rows by un-nesting the array with numbering of positions.
posexplode_outer,posexplode_outer(expr),Returns rows by un-nesting the array with numbering of positions using OUTER semantics.
position,"position(substr, str[, pos])",Returns the position of the first occurrence of substr in str after position pos.
positive,positive(expr),Returns the value of expr.
pow,"pow(expr1, expr2)",Raises expr1 to the power of expr2.
power,"power(expr1, expr2)",Raises expr1 to the power of expr2.
printf,"printf(strfmt[, obj1 [, …]])",Returns a formatted string from printf-style format strings.
quarter,quarter(expr),Returns the quarter of the year for expr in the range 1 to 4.
radians,radians(expr),Converts expr in degrees to radians.
raise_error,raise_error(expr),Throws an exception with expr as the message.
rand,rand([seed]),Returns a random value between 0 and 1.
randn,randn([seed]),Returns a random value from a standard normal distribution.
random,random([seed]),Returns a random value between 0 and 1.
range,range(end),Returns a table of values within a specified range.
rank,rank(),Returns the rank of a value compared to all values in the partition.
read_files,"read_files(path, [optionKey => optionValue] [, …])",Reads data files on cloud storage and returns it in tabular format.
read_kafka,"read_kafka([optionKey => optionValue] [, …])",Reads records from an Apache Kafka cluster and returns it in tabular format.
read_kinesis,"read_kinesis({parameter => value} [, …])",Returns a table with records read from Kinesis from one or more streams.
read_pubsub,"read_pubsub([parameter => value] [, …])",A table valued function for reading records from Pub/Sub from a topic.
read_pulsar,"read_pulsar({optionKey => optionValue} [, …])",Returns a table with records read from Pulsar.
read_state_metadata,read_state_metadata(path),Returns a table with rows that represent the metadata of a streaming query state.
read_statestore,"read_statestore(path [, option_key => option_value] […])",Returns records from the state store of streaming queries.
reduce,"reduce(expr,start,merge[,finish])",Aggregates elements in an array using a custom aggregator.
reflect,"reflect(class, method[, arg1 [, …]])",Calls a method with reflection.
regexp_count,"regexp_count(str, regexp)",Returns the number of times str matches the regexp pattern.
regexp_extract,"regexp_extract(str, regexp[, idx])",Extracts the first string in str that matches the regexp expression and corresponds to the regex group index.
regexp_extract_all,"regexp_extract_all(str, regexp[, idx])",Extracts the all strings in str that matches the regexp expression and corresponds to the regex group index.
regexp_instr,"regexp_instr(str, regexp)",Returns the position of the first substring in str that matches regexp.
regexp_replace,"regexp_replace(str, regexp, rep[, position])",Replaces all substrings of str that match regexp with rep.
regexp_substr,"regexp_substr(str, regexp)",Returns the first substring in str that matches regexp.
regr_avgx,"regr_avgx(yExpr, xExpr)",Returns the mean of xExpr calculated from values of a group where xExpr and yExpr are NOT NULL.
regr_avgy,"regr_avgy(yExpr, xExpr)",Returns the mean of yExpr calculated from values of a group where xExpr and yExpr are NOT NULL.
regr_count,"regr_count(yExpr, xExpr)","Returns the number of non-null value pairs yExpr, xExpr in the group."
regr_intercept,"regr_intercept(yExpr, xExpr)",Returns the intercept of the uni-variate linear regression line in a group where xExpr and yExpr are NOT NULL.
regr_r2,"regr_r2(yExpr, xExpr)",Returns the coefficient of determination from values of a group where xExpr and yExpr are NOT NULL.
regr_slope,"regr_slope(yExpr, xExpr)","Returns the slope of the linear regression line of non-null value pairs yExpr, xExpr in the group."
regr_sxx,"regr_sxx(yExpr, xExpr)",Returns the sum of squares of the xExpr values of a group where xExpr and yExpr are NOT NULL.
regr_sxy,"regr_sxy(yExpr, xExpr)",Returns the sum of products of yExpr and xExpr calculated from values of a group where xExpr and yExpr are NOT NULL.
regr_syy,"regr_syy(yExpr, xExpr)",Returns the sum of squares of the yExpr values of a group where xExpr and yExpr are NOT NULL.
repeat,"repeat(expr, n)",Returns the string that repeats expr n times.
replace,"replace(str, search [, replace])",Replaces all occurrences of search with replace.
reverse,reverse(expr),Returns a reversed string or an array with reverse order of elements.
right,"right(str, len)",Returns the rightmost len characters from the string str.
rint,rint(expr),Returns expr rounded to a whole number as a DOUBLE.
round,"round(expr[,targetScale])",Returns the rounded expr using HALF_UP rounding mode.
row_number,row_number(),"Assigns a unique, sequential number to each row, starting with one, according to the ordering of rows within the window partition."
rpad,"rpad(expr, len[, pad])","Returns expr, right-padded with pad to a length of len."
rtrim,"rtrim([trimStr,] str)",Returns str with trailing characters removed.
schema_of_csv,"schema_of_csv(csv[, options])",Returns the schema of a CSV string in DDL format.
schema_of_json,"schema_of_json(jsonStr[, options])",Returns the schema of a JSON string in DDL format.
schema_of_json_agg,"schema_of_json_agg(json[, options])",Returns the combined schema of JSON strings in a group in DDL format.
schema_of_xml,"schema_of_xml(xmlStr[, options])",Returns the schema of a XML string in DDL format.
sec,sec(expr),Returns the secant of expr.
second,second(expr),Returns the second component of the timestamp in expr.
secret,"secret(scope, key)",Extracts a secret value with the given scope and key from Databricks secret service.
sentences,"sentences(str[, lang, country])",Splits str into an array of array of words.
sequence,"sequence(start,stop,step)","Generates an array of elements from start to stop (inclusive), incrementing by step."
session_user,session_user(),Returns the user connected to Databricks.
session_window,"session_window(expr, gpDuration)",Creates a session-window over a timestamp expression.
sha,sha(expr),Returns a sha1 hash value as a hex string of expr.
sha1,sha1(expr),Returns a sha1 hash value as a hex string of expr.
sha2,"sha2(expr, bitLength)",Returns a checksum of the SHA-2 family as a hex string of expr.
shiftleft,"shiftleft(expr, n)",Returns a bitwise left shifted by n bits.
shiftright,"shiftright(expr, n)",Returns a bitwise signed signed integral number right shifted by n bits.
shiftrightunsigned,"shiftrightunsigned(expr, n)",Returns a bitwise unsigned signed integral number right shifted by n bits.
shuffle,shuffle(array),Returns a random permutation of the array in expr.
sign,sign(expr),"Returns -1.0, 0.0, or 1.0 as expr is negative, 0, or positive."
signum,signum(expr),"Returns -1.0, 0.0, or 1.0 as expr is negative, 0, or positive."
sin,sin(expr),Returns the sine of expr.
sinh,sinh(expr),Returns the hyperbolic sine of expr.
size,size(expr),Returns the cardinality of expr.
skewness,skewness(expr),Returns the skewness value calculated from values of a group.
slice,"slice(expr,start,length)",Returns a subset of an array.
smallint,smallint(expr),Casts the value expr to SMALLINT.
some,some(expr),Returns true if at least one value of expr in a group is true.
sort_array,"sort_array(expr[,ascendingOrder])",Returns the array in expr in sorted order.
soundex,soundex(expr),Returns the soundex code of the string.
space,space(n),Returns a string consisting of n spaces.
spark_partition_id,spark_partition_id(),Returns the current partition ID.
split,"split(str, regex[, limit])",Splits str around occurrences that match regex and returns an array with a length of at most limit.
split_part,"split_part(str, delim, partNum)",Splits str around occurrences of delim and returns the partNum part.
sql_keywords,sql_keywords(),Returns the set of SQL keywords in Databricks.
sqrt,sqrt(expr),Returns the square root of expr.
stack,"stack(numRows, expr1 [, …])","Separates expr1, …, exprN into numRows rows."
startswith,"startswith(expr, startExpr)",Returns true if expr STRING or BINARY starts with startExpr.
std,std(expr),Returns the sample standard deviation calculated from the values within the group.
stddev,stddev(expr),Returns the sample standard deviation calculated from the values within the group.
stddev_pop,stddev_pop(expr),Returns the population standard deviation calculated from values of a group.
stddev_samp,stddev_samp(expr),Returns the sample standard deviation calculated from values of a group.
str ilike ,str ilike (pattern[ESCAPE escape]),Returns true if str matches pattern with escape case insensitively.
str like ,str like (pattern[ESCAPE escape]),Returns true if str matches pattern with escape.
str_to_map,"str_to_map(expr[,pairDelim[,keyValueDelim]])",Returns a map after splitting expr into key-value pairs using delimiters.
string,string(expr),Casts the value expr to STRING.
struct,"struct(expr1 [, …])",Creates a STRUCT with the specified field values.
substr,"substr(expr, pos[, len])",Returns the substring of expr that starts at pos and is of length len.
substring,"substring(expr, pos[, len])",Returns the substring of expr that starts at pos and is of length len.
substring_index,"substring_index(expr, delim, count)",Returns the substring of expr before count occurrences of the delimiter delim.
sum,sum(expr),Returns the sum calculated from values of a group.
table_changes,"table_changes(table_str, start [, end])",Returns a log of changes to a Delta Lake table with Change Data Feed enabled.
tan,tan(expr),Returns the tangent of expr.
tanh,tanh(expr),Returns the hyperbolic tangent of expr.
timediff,"timediff(unit, start, stop)",Returns the difference between two timestamps measured in units.
timestamp,timestamp(expr),Casts expr to TIMESTAMP.
timestamp_micros,timestamp_micros(expr),Creates a timestamp expr microseconds since UTC epoch.
timestamp_millis,timestamp_millis(expr),Creates a timestamp expr milliseconds since UTC epoch.
timestamp_seconds,timestamp_seconds(expr),Creates timestamp expr seconds since UTC epoch.
timestampadd,"timestampadd(unit, value, expr)",Adds value units to a timestamp expr.
timestampdiff,"timestampdiff(unit, start, stop)",Returns the difference between two timestamps measured in units.
tinyint,tinyint(expr),Casts expr to TINYINT.
to_binary,"to_binary(expr[, fmt])",Returns expr cast to a Binary based on fmt.
to_char,"to_char(numExpr, fmt)",Returns numExpr cast to STRING using formatting fmt.”
to_csv,"to_csv(expr[, options])",Returns a CSV string with the specified struct value.
to_date,"to_date(expr[,fmt])",Returns expr cast to a date using an optional formatting.
to_json,"to_json(expr[, options])",Returns a JSON string with the struct specified in expr.
to_number,"to_number(expr, fmt )",Returns expr cast to DECIMAL using formatting fmt.
to_timestamp,"to_timestamp(expr[,fmt])",Returns expr cast to a timestamp using an optional formatting.
to_unix_timestamp,"to_unix_timestamp(expr[,fmt])",Returns the timestamp in expr as a UNIX timestamp.
to_utc_timestamp,"to_utc_timestamp(expr,timezone)",Returns the timestamp in expr in a different timezone as UTC.
to_varchar,"to_varchar(numExpr, fmt)",Returns numExpr cast to STRING using formatting fmt.”
transform,"transform(expr, func)",Transforms elements in an array in expr using the function func.
transform_keys,"transform_keys(expr, func)",Transforms keys in a map in expr using the function func.
transform_values,"transform_values(expr, func)",Transforms values in a map in expr using the function func.
translate,"translate(expr, from, to)",Returns an expr where all characters in from have been replaced with those in to.
trim,trim([[BOTH | LEADING | TRAILING] [trimStr] FROM] str),Trim characters from a string.
trunc,"trunc(expr, fmt)",Returns a date with the a portion of the date truncated to the unit specified by the format model fmt.
try_add,"try_add(expr1, expr2)","Returns the sum of expr1 and expr2, or NULL in case of error."
try_aes_decrypt,"try_aes_decrypt(expr, key[, mode[, padding[, aad]]])","Decrypts a binary expr using AES encryption, and return NULL in case of error."
try_avg,try_avg(expr),"Returns the mean calculated from values of a group, NULL if there is an overflow."
try_cast,try_cast(expr AS type),Casts the value expr to the target data type type safely.
try_divide,"try_divide(dividend, divisor)","Returns dividend divided by divisor, or NULL if divisor is 0."
try_element_at,"try_element_at(arrayExpr, index)","Returns the element of an arrayExpr at index, or NULL if index is out of bound."
try_multiply,"try_multiply(multiplier, multiplicand)","Returns multiplier multiplied by multiplicand, or NULL on overflow."
try_reflect,"try_reflect(class, method[, arg1 [, …]])","Calls a method with reflection, returning NULL if the method fails."
try_subtract,"try_subtract(expr1, expr2)","Returns the subtraction of expr2 from expr1, or NULL on overflow."
try_sum,try_sum(expr),"Returns the sum calculated from values of a group, NULL if there is an overflow."
try_to_binary,"try_to_binary(expr [, fmt])","Returns expr cast to BINARY based on fmt, or NULL if the input is invalid."
try_to_number,"try_to_number(expr, fmt )","Returns expr cast to DECIMAL using formatting fmt, or NULL if expr does not match the format."
try_to_timestamp,"try_to_timestamp(expr[,fmt])","Returns expr cast to a timestamp using an optional formatting, or NULL if the cast fails."
typeof,typeof(expr),Return a DDL-formatted type string for the data type of expr.
ucase,ucase(expr),Returns expr with all characters changed to uppercase.
unbase64,unbase64(expr),Returns a decoded base64 string as binary.
unhex,unhex(expr),Converts hexadecimal expr to BINARY.
unix_date,unix_date(expr),Returns the number of days since 1970-01-01.
unix_micros,unix_micros(expr),Returns the number of microseconds since 1970-01-01 00:00:00 UTC.
unix_millis,unix_millis(expr),Returns the number of milliseconds since 1970-01-01 00:00:00 UTC.
unix_seconds,unix_seconds(expr),Returns the number of seconds since 1970-01-01 00:00:00 UTC.
unix_timestamp,"unix_timestamp([expr[, fmt]])",eturns the UNIX timestamp of current or specified time.
upper,upper(expr),Returns expr with all characters changed to uppercase.
url_decode,url_decode(str),Translates a string back from application/x-www-form-urlencoded format.
url_encode,url_encode(str),Translates a string into application/x-www-form-urlencoded format.
user,user(),Returns the user executing the statement.
uuid,uuid(),Returns an universally unique identifier (UUID) string.
var_pop,var_pop(expr),Returns the population variance calculated from values of a group.
var_samp,var_samp(expr),Returns the sample variance calculated from values of a group.
variance,variance(expr),Returns the sample variance calculated from values of a group.
version,version(),Returns the Apache Spark version.
weekday,weekday(expr),Returns the day of the week of expr.
weekofyear,weekofyear(expr),Returns the week of the year of expr.
width_bucket,"width_bucket(expr, minExpr, maxExpr, numBuckets)",Returns the bucket number for a value in an equi-width histogram.
window,"window(expr, width[, step[, start]])",Creates a hopping based sliding-window over a timestamp expression.
window_time,window_time(window),Returns the inclusive end time of a sliding-window produced by the window or session_window functions.
xpath,"xpath(xml, xpath)",Returns values within the nodes of xml that match xpath.
xpath_boolean,"xpath_boolean(xml, xpath)","Returns true if the xpath expression evaluates to true, or if a matching node in xml is found."
xpath_double,"xpath_double(xml, xpath)",Returns a DOUBLE value from an XML document.
xpath_float,"xpath_float(xml, xpath)",Returns a FLOAT value from an XML document.
xpath_int,"xpath_int(xml, xpath)",Returns a INTEGER value from an XML document.
xpath_long,"xpath_long(xml, xpath)",Returns a BIGINT value from an XML document.
xpath_number,"xpath_number(xml, xpath)",Returns a DOUBLE value from an XML document.
xpath_short,"xpath_short(xml, xpath)",Returns a SHORT value from an XML document.
xpath_string,"xpath_string(xml, xpath)",Returns the contents of the first XML node that matches the XPath expression.
xxhash64,"xxhash64(expr1 [, …])",Returns a 64-bit hashed value of the arguments.
year,year(expr),Returns the year component of expr.
zip_with,"zip_with(expr1, expr2, func)","Merges the arrays in expr1 and expr2, element-wise, into a single array using func."

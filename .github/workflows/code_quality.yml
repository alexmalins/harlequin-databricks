name: Code formatting, linting and type checking

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  code_checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8']
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    timeout-minutes: 10

    steps:
    - name: Check out code repository
      uses: actions/checkout@v4
      with:
          persist-credentials: false

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: static-venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install python dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --sync --no-interaction

    - name: Run Black check
      run: |
        source .venv/bin/activate
        black . --check

    - name: Lint with ruff
      run: |
        source .venv/bin/activate
        ruff .

    - name: Check types with mypy
      run: |
        source .venv/bin/activate
        mypy

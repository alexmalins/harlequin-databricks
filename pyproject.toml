[project]
name = "harlequin-databricks"
version = "0.6.0"
description = "A Harlequin adapter for Databricks."
authors = [
    { name = "Alex Malins", email = "github@alexmalinsREMOVETHIS.com" },
    { name = "Zach Shirah", email = "zachshirah01@gmail.com" },
]
requires-python = ">=3.9,<3.14.0"
readme = "README.md"
license = "MIT"
dependencies = [
    "harlequin>=2.1.2",
    "databricks-sql-connector>=4.0.4",
]

[project.optional-dependencies]
databricks-sdk = ["databricks-sdk>=0.57.0"]

[project.urls]
Homepage = "https://harlequin.sh/docs/databricks/index"
Repository = "https://github.com/alexmalins/harlequin-databricks"
Documentation = "https://harlequin.sh/docs/databricks/index"
Changelog = "https://github.com/alexmalins/harlequin-databricks/blob/main/CHANGELOG.md"
Discussions = "https://github.com/alexmalins/harlequin-databricks/discussions"
Issues = "https://github.com/alexmalins/harlequin-databricks/issues"

[project.entry-points."harlequin.adapter"]
databricks = "harlequin_databricks:HarlequinDatabricksAdapter"

[dependency-groups]
dev = [
    "ruff>=0.12.1",
    "pytest>=8.4.1",
    "mypy>=1.16.1",
    "importlib_metadata>=8.7.0 ; python_version < '3.10.0'",
    "beautifulsoup4>=4.12.0",
    "types-beautifulsoup4>=4.12.0.0",
    "lxml>=6.0.0",
    "pandas>=2.0.0",
    "pandas-stubs>=2.0.0.230412",
    "requests>=2.32.4",
    "types-requests>=2.32.4.20250611",
]

[build-system]
requires = ["uv_build>=0.7.16"]
build-backend = "uv_build"

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",  # Allow `Any` type hint.
    "ARG002",  # Allow unused `**kwargs` argument, as not to break Harlequin adapter API.
    "C901",  # Allow functions with >10 decision points.
    "COM812",  # No need for trailing comma in functions/methods with only one argument.
    "D100",  # No need for docstrings sometimes.
    "D101",  # No need for docstrings sometimes.
    "D102",  # No need for docstrings sometimes.
    "D103",  # No need for docstrings sometimes.
    "D104",  # No need for docstrings sometimes.
    "D107",  # No need for docstrings sometimes.
    "D202",  # Allow blank line after docstring.
    "D203",  # No need for blank line before docstring.
    "D213",  # Clashes with D212.
    "FBT001",  # Allow boolean positional function argument, as not to break Harlequin adapter API.
    "FBT002",  # Allow boolean positional function argument, as not to break Harlequin adapter API.
    "PERF401",  # List `.extend()` method is not widely known.
    "PGH003",  # Allow `#  type: ignore`.
    "PLC0415",  # Allow in function imports.
    "PLR0911",  # Allow functions >6 return statements.
    "PLR0913",  # Allow >5 function arguments, as not to break Harlequin adapter API.
    "S101",  # Allow asserts in code.
    "UP015",  # Allow passing open mode `"r"` to `open()`, as explicit better than implicit.
] 

[tool.ruff.lint.pycodestyle]
max-line-length = 100

[tool.ruff.lint.per-file-ignores]
"scripts/*.py" = [
    "INP001",  # No need for `__init__.py` in scripts folder.
]
"tests/test_*.py" = [
    "PLR2004",  # Allow hardcoded expected results in test asserts.
    "INP001",  # No need for `__init__.py` in tests folder.
]

[tool.mypy]
python_version = "3.9"
disable_error_code = "unused-ignore"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_context = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
